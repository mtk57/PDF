Linux Command memo   since.2019/10/17-

CentOS8


===================================================================
コマンド		概要と使用例	★よく使う
===================================================================
bg				指定したジョブをバックグラウンドに移行する
-------------------------------------------------------------------
cat				ファイルの内容を表示する★

				-n		行番号をつけて表示

				ヒアドキュメント「<<」を使って、特定の文字列が入力されるまで
				標準入力を取り込める

-------------------------------------------------------------------
cd				カレントディレクトリを移動する★

				<ディレクトリ記号>
				/		ルートディレクトリ
				~		ホームディレクトリ
				.		カレントディレクトリ
				..		親ディレクトリ

-------------------------------------------------------------------
chfn			ユーザー情報を変更する
-------------------------------------------------------------------
chmod			ファイルやフォルダのアクセス権限を変更する
-------------------------------------------------------------------
chown			ファイルやフォルダのオーナーやグループを変更する
-------------------------------------------------------------------
cp				ファイルやフォルダをコピーする★
-------------------------------------------------------------------
cut				テキストファイルから文字列を取り出す

				-d		フィールドの区切り文字を指定（デフォルトはタブ）
				-f		指定されたフィールドだけを表示

				例：passwdファイルからユーザー名だけを取り出し、最後の1行を表示
				$ cut -d : -f 1 /etc/passwd | tail -1
				yuko

-------------------------------------------------------------------
deluser			ユーザーを削除する
-------------------------------------------------------------------
df				
-------------------------------------------------------------------
diff			ファイルとファイルの内容の違いを表示する
-------------------------------------------------------------------
export			環境変数の一覧を表示する
-------------------------------------------------------------------
fdisk			パーティションの作成・削除・変更・情報表示を行う

				例１：
				# fdisk -l /dev/sd*

				例２：対話的に操作
				# fdisk /dev/sda

				<パーティションのタイプ>
				Linux スワップ パーティション   (ID=82)
				Linux データ パーティション     (ID=83)
				Linux LVM パーティション        (ID=8e)

				<ファイルシステム>
				ext			
				ext2		
				ext3		
				ext4		
				reisefs		
				xfs			
				jfs			
				vfat		
				exfat		
				btrfs		
				nfs			
				cifs		

				<ファイルの構成要素>
				ファイルシステムで使われる「ファイル」は以下の要素で出来ている
				①ファイル名		
				②inode				
				③データブロック	

-------------------------------------------------------------------
fg				指定したジョブをフォアグラウンドに移行する
-------------------------------------------------------------------
fgrep			正規表現を使用しないでgrepする
-------------------------------------------------------------------
file			ファイルの種類を調べる

				例：
				$ file /etc
				/etc: directory

-------------------------------------------------------------------
find			ファイルの検索をする★

				-name		ファイル名を指定して検索

				例1：カレントディレクトリ配下の*.txtを検索
				# find . -name "*.txt"

-------------------------------------------------------------------
free			空きメモリや、使用中メモリを表示する
-------------------------------------------------------------------
grep			指定した検索文字列がテキスト内に存在した場合その行を抽出する★
				検索文字列には正規表現を使用できる。（使用したくない場合がfgrepを使う）

				-r			ディレクトリ内も検索対象とする

				例1：
				# grep -r 検索文字列 ディレクトリ

-------------------------------------------------------------------
groupadd		グループを新規作成する
-------------------------------------------------------------------
groupdel		グループを削除する
-------------------------------------------------------------------
head			テキストファイルの先頭部分を表示する

				例：
				$ head -3 /etc/passwd
				root:x:0:0:root:/root:/bin/bash
				bin:x:1:1:bin:/bin:/sbin/nologin
				daemon:x:2:2:daemon:/sbin:/sbin/nologin

-------------------------------------------------------------------
history			コマンド履歴を表示する★
-------------------------------------------------------------------
id				ユーザー情報を表示する
-------------------------------------------------------------------
jobs			バックグラウンドジョブと一時停止中のジョブを表示する
-------------------------------------------------------------------
join			2つのファイルを結合する
-------------------------------------------------------------------
kill			プロセスにシグナルを送る

				-l		シグナルの一覧を表示

				<主なシグナル>
				SIGHUP		端末の切断によるプロセスの終了
				SIGINT		割り込みによるプロセスの終了
							CTRL+Cによるキーボードからの割り込みもこれ。
				SIGKILL		プロセスの強制終了
				SIGTERM		プロセスの終了（デフォルト）
				SIGCONT		一時停止したプロセスの再開

-------------------------------------------------------------------
killall			プロセス名を指定してシグナルを送信する

-------------------------------------------------------------------
less			テキストファイルを閲覧する★

				操作はmanと同じ

-------------------------------------------------------------------
ln				ファイルやフォルダにリンクを設定する
-------------------------------------------------------------------
locate			
-------------------------------------------------------------------
ls				フォルダの内容をリスト形式で表示する★

				詳細表示
				$ ls -l
-------------------------------------------------------------------
lsscsi			
-------------------------------------------------------------------
lshw			
-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------
-------------------------------------------------------------------
man				コマンドのマニュアルを表示する

				<キー操作>
				SPACE		次ページ
				b			前ページ
				ENTER		次の行
				/文字列		検索
				n			次の検索
				q			終了
-------------------------------------------------------------------
more			ファイルをページ単位で閲覧する 
-------------------------------------------------------------------
mkdir			フォルダを作成する★

				-p		中間ディレクトリを同時に作成する

-------------------------------------------------------------------
more			1画面ずつ表示する

				SPACE		次ページ

-------------------------------------------------------------------
mv				ファイルを移動
-------------------------------------------------------------------
nice			プロセスの優先度を変更する
-------------------------------------------------------------------
nohup			ログアウトしてもコマンドを実行し続ける
-------------------------------------------------------------------
od				ファイルの内容を16進数などで表示する

				-d		10進数
				-x		16進数
				-c		ASCII文字 or エスケープ文字として表示

-------------------------------------------------------------------
paste			ファイルを行単位で結合する
-------------------------------------------------------------------
pgrep			実行中のプロセスの情報を検索する

				-t		指定した端末で実行されているプロセスIDを検索
				-u		指定された実効ユーザIDに該当するプロセスIDを検索
				-U		指定された実ユーザIDに該当するプロセスIDを検索

-------------------------------------------------------------------
pkill			
-------------------------------------------------------------------
ps				プロセスの情報を表示する★

				-e | a	すべてのプロセスを表示
				-f | u	詳細情報を表示
					 x	制御端末のないプロセス情報も表示

-------------------------------------------------------------------
pstree			プロセスの階層構造を表示する

				-h			カレントのプロセスとその先祖プロセスを強調表示
				-H <PID>	指定したプロセスとその先祖プロセスを強調表示
				-p			プロセスIDをつけて表示

-------------------------------------------------------------------
pwd				現在の作業ディレクトリパスを表示する★
-------------------------------------------------------------------
pvcreate		LVMの物理ボリュームを作成する
				Linuxでは当初、HDDなどに直接ファイルシステムを割り当てて管理していましたが、
				現在では、物理ボリュームをまとめて仮想化されたボリュームグループを作り上げた後、
				それを論理ボリュームに切り分けて管理する仕組み「LVM（Logical Volume Manager）」が取り入れられています。
				例えば、CentOSでは、デフォルト設定のインストールで論理ボリュームを使用します。

-------------------------------------------------------------------
renice			プロセスの優先度を変更する
-------------------------------------------------------------------
rm				ファイルやディレクトリを削除する★

				-f		強制実行
				-r		再帰的に削除する

-------------------------------------------------------------------
rmdir			空ディレクトリを削除する
-------------------------------------------------------------------
route			ルーティングの表示や設定を行う
-------------------------------------------------------------------
sed				テキストファイルの文字列を置換する
-------------------------------------------------------------------
set             シェル変数の一覧を表示する
-------------------------------------------------------------------
sort			ファイルの内容を行単位でソートする
-------------------------------------------------------------------
split			ファイルを決まった大きさに分割する
-------------------------------------------------------------------
systemctl		systemdをコントロールする

				sshdの再起動
				# systemctl restart sshd

				sshdの状態表示
				# systemctl status sshd

-------------------------------------------------------------------
su				一時的にユーザーを切り替える★

				例1：
				$ su root			rootに切り替える。ログイン環境はそのまま。

				例2：
				$ su - root			rootに切り替える。ログイン環境も切り替わる。

-------------------------------------------------------------------
sudo			管理者に許可されている管理用コマンドを実行する★
-------------------------------------------------------------------
tail			テキストファイルの末尾部分を表示する

				-f		常に最終部分を読み続ける（syslogのように動的に増えているファイルに有効）

				例：
				$ tail -3 /etc/passwd
				pesign:x:979:979:Group for the pesign signing daemon:/var/run/pesign:/sbin/nologin
				tcpdump:x:72:72::/:/sbin/nologin
				yuko:x:1000:1000::/home/yuko:/bin/bash
-------------------------------------------------------------------
tar				アーカイブファイルの作成・参照・展開
				オプションのハイフンは省略可能

				-c		アーカイブファイルを作成
				-t		アーカイブファイルの内容を表示
				-x		アーカイブファイルの展開
				-f		アーカイブファイル名を指定
				-v		詳細情報を表示
				-j		アーカイブに対して、bzip2を使用(※1)
				-J		アーカイブに対して、xzを使用(※1)
				-z		アーカイブに対して、gzipを使用(※1)

				※-cと併用すれば圧縮、-xと併用すれば解凍になる。

				「アーカイブ・展開」と「圧縮・伸張（解凍）」は異なるので注意。
				アーカイブは単に複数ファイルを１ファイルにまとめるだけなので、ファイルサイズは小さくならない。

				<拡張子>
				.tar	tar形式でアーカイブ
				.tgz	tar形式でアーカイブされ、gzipで圧縮

				<圧縮・解凍コマンド>
				gzip/gunzip
				bzip2/bunzip2
				xz/unxz

-------------------------------------------------------------------
tee				標準入力から読み込んだデータを標準出力とファイルの両方に出力する
-------------------------------------------------------------------
top				プロセスの情報を周期的にリアルタイムに表示する
				※Windowsのタスクマネージャのイメージ
				プロセスの優先度の変更もできる。（reniceでも可能）

-------------------------------------------------------------------
touch			ファイルを作成する
-------------------------------------------------------------------
tr				テキストファイルの1文字を置換する（単語単位では無理）

				例えば、WindowsのファイルをLinuxにコピーしたときに
				Windowsの改行コード(\r\n)の\rを削除する場合とかに便利
-------------------------------------------------------------------
tree			ディレクトリをツリー表示する★

				例：
				# tree | less

-------------------------------------------------------------------
type			
-------------------------------------------------------------------
uniq			並び替え済のファイルから重複行を削除する
-------------------------------------------------------------------
unset			シェル変数を削除する
-------------------------------------------------------------------
useradd			ユーザーを新規作成する
-------------------------------------------------------------------
vi				ファイルの編集を行う。

				<モード操作>
				ESC				コマンドモード

				<コマンド>
				i				挿入モード
				0				行の先頭に移動
				$				行の末尾に移動
				G				最終行に移動
				CTRL + b		先頭に向かってスクロール
				CTRL + f		末尾に向かてスクロール
				:wq				保存して終了
				:q!				保存せずに強制終了
				:w				ファイル名を変更せずに保存
				:w <FileName>	ファイル名を変更して保存
				:!				外部コマンド(lsとか)を実行
				dd				カーソル行を削除
				D				カーソルから行の最後まで削除
				x				カーソル上の1文字を削除（要はdeleteキーと同じ）
				/<文字列>		カーソルから末尾に向かって検索
				?<文字列>		カーソルから先頭に向かって検索
				n				次を検索
				N				前を検索
				u				アンドゥ（コマンドの取り消し）
				:set number		行番号を表示
				:set list		タブ文字などを表示

-------------------------------------------------------------------
watch			指定されたコマンドを繰り返し実行する

				-n		実行間隔(秒)

				例：5秒ごとにdateを実行する
				# watch -n 5 date

-------------------------------------------------------------------
wc				ファイル内のバイト数、単語数、行数等を表示する

				-c		バイト数
				-l		行数
				-w		単語数

-------------------------------------------------------------------
シェル変数
				設定されたシェルだけが使用する変数。
				子プロセスには引き継がれない。

				参照：シェル変数名 or ${シェル変数名}
						例：echo PWD
							echo ${PWD}
				更新：シェル変数名=値
						例：TEST="SE"
				削除：unset シェル変数名
						例：unset TEST

				<主なシェル変数>
				PWD			カレントディレクトリの絶対パス
				PATH		コマンド検索パス
				HOME		ユーザーのホームディレクトリ
				PS1			プロンプトを定義
				PS2			2次プロンプトを定義
				HISTFILE	コマンド履歴を格納するファイルを定義
				LANG		言語情報

-------------------------------------------------------------------
環境変数
				設定されたシェルとそのシェルで起動したプログラムが使用する変数。
				子プロセスに引き継がれる。

-------------------------------------------------------------------
リダイレクト
				出力先を変更すること。
				Linuxでは、
					0：標準入力（キーボードなど）
					1：標準出力（画面など）
					2：標準エラー出力（画面など）
				となっていて、何も指定しなければ、標準出力になるが、
				リダイレクトを使えば、コマンドの結果を画面ではなくファイルに出力できる。

				<記号>
				>
				<
				>>
				&

				例： Aは存在するファイル、Bは存在しないファイルとする

				$ ls > file1			lsの結果をfile1に格納
				$ ls >> file2			lsの結果をfile2に追記して格納
				$ ls A B 2> file3		標準エラー出力(2)のみをfile3に格納
				$ ls A B &> both		標準出力(1)、標準エラー出力(2)の両方をbothに格納
				$ ls A B >& both		同上
				$ ls A B 1> both 2>&1	同上
				$ コマンド1 < file1		file1の内容を標準入力からコマンド1に取り込む
				$ コマンド2 > /dev/null 2>&1
										コマンド2の結果（標準出力）を/dev/nullに出力し、
										標準エラー出力は標準出力と同じ（/dev/null）にする
										/dev/nullに出力された出力は破棄される。（どこにも出力されない）

-------------------------------------------------------------------
パイプ
				コマンドの処理結果（標準出力）を次のコマンドの標準入力に渡すこと。

				<記号>
				|

				例：
				$ cat /etc/passwd | head -3			catコマンドの結果をheadコマンドに渡す
				root:x:0:0:root:/root:/bin/bash
				bin:x:1:1:bin:/bin:/sbin/nologin
				daemon:x:2:2:daemon:/sbin:/sbin/nologin


-------------------------------------------------------------------
コマンドの連続実行
				<記号>
				;		左辺のコマンドの実行結果に関係なく、右辺のコマンドを実行
				&&		左辺のコマンドが正常終了の場合のみ、右辺のコマンドを実行
				||		左辺のコマンドが正常終了以外の場合のみ、右辺のコマンドを実行（ORじゃないので注意）

				コマンドの終了ステータスは、以下で確認可能。
				$ echo $?

-------------------------------------------------------------------
正規表現
				<記号>
				.		任意の1文字
				^		行の先頭
				$		行の末尾
				*		直前の文字が0回以上の繰り返しに一致
				?		直前の文字が0回もしくは1回の繰り返しに一致
				+		直前の文字が1回以上の繰り返しに一致
				[]		[]内の文字グループと一致
							例：
							[abAB]		a, b, A, Bのいずれかの文字
							[^abAB]		a, b, A, B以外のいずれかの文字
							[a-dA-D]	a, b, c, d, A, B, C, Dのいずれかの文字



-------------------------------------------------------------------
主なディレクトリ(CentOS 8)
				bin		一般ユーザ、管理者が使用するコマンドを配置
				boot	システム起動時に必要なブートローダ関連のファイルやカーネルイメージを配置
				dev		デバイスファイルを配置。システム起動時に接続されているデバイスがチェックされ自動的に作成される
				etc		システム管理用の設定ファイルや、各種ソフトウェアの設定ファイルを配置
				home	ユーザのホームディレクトリを配置
				lib		/binや/sbinなどに置かれたコマンドやプログラムが利用する共有ライブラリを配置
				lib64	64bit用の共有ライブラリを配置
				media	CD/DVDなどのデータを配置
				mnt		CD-ROMなどのファイルシステムの一時的なマウントポイント
				opt		Linuxインストール後、追加でインストールしたパッケージ（ソフトウェア）を配置
				proc	カーネルやプロセスが保持する情報を配置。仮想ファイルシステムであるためファイル自体は存在しない
				root	rootユーザのホームディレクトリ
				run		ブートしてからのシステム情報を配置。（pidファイルやlockファイル、ソケットファイルなど）
						再起動時に消去される
				sbin	主にシステム管理者が使用するコマンドを配置。ただしオプションによって一般ユーザも使用可能
						（ip, shutdown, reboot など）
				srv		システムによって提供されたサイト固有のデータ群。FTPやWWWでユーザー用のディレクトリとして使用される
				sys		ドライバ関連のプロセス情報群。 /proc が膨大になるのを防ぐために分けられている
				tmp		アプリケーションやユーザが利用する一時ファイルを配置
						再起動時に消去される
				usr		全ユーザが共有するデータを配置。ユーティリティ、ライブラリ、コマンドを配置
				var		システム運用中にサイズが変化するファイルを配置。（ログ等）

	参考：https://qiita.com/uhooi/items/c1388f8d803641bfb8f3
-------------------------------------------------------------------
デバイス
		<ハードディスク>	/dev/sd*
			SCSI
			SATA
			IDE/ATA
			USB

		




