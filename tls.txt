
-------------------------------------------------------------------------------------------------


・SSLSocketFactoryで以下の例外が発生しており、通信確認まで行えていない。
  知見があれば教示をお願いしたい。
  ⇒これは聞かなくてよいかも。

・本番サーバーはクライアント認証を行うのか？
　⇒行う場合、クライアント証明書のインストール等はどうするのか？
　⇒本番サーバーとの接続テストはSTで行うのか？（SSTではダミーサーバーでよいのか？）


-------------------------------------------------------------------------------------------------



-------------------------------------------------------------------------------------------------
■直近の問題点
・OC SSLSocketFactoryで例外。(まだ通信前なので環境っぽいが)
  ⇒FIPS mode only SunJSSE TrustManagers may be used   FIPSモードのみのSunJSSE TrustManagerが使用可能
  ⇒TrustStrategy
  ⇒JSSE = Java Secure Socket Extension
  ⇒なんとなく、cacertsが絡んでいるっぽい。(https://docs.oracle.com/javase/jp/7/technotes/guides/security/jsse/JSSERefGuide.html#HTTPSSample)
  ⇒http://blog.livedoor.jp/k_urushima/tag/JSSE
  ⇒https://www2.cs.duke.edu/csed/java/jdk1.7/technotes/guides/security/jsse/FIPS.html
  ⇒https://www.databaseadm.com/article/12258684/java.security.KeyManagementException%3A+FIPS+mode%3A+only+SunJSSE+TrustManagers
  ⇒FIPSモードの場合、暗号化プロバイダはSunPKCS11-NSS
  ⇒https://docs.oracle.com/cd/E57014_01/wls/SECMG/fips.htm#BABHHFFB
  ⇒https://living-sun.com/ja/java/449160-is-there-a-way-to-load-a-different-cacerts-than-the-one-specified-in-the-java_home-jre-lib-security-folder-java-security-ssl-jsse.html
  ⇒https://stackoverflow.com/questions/24847742/only-sunjsse-trustmanagers-may-be-used-when-debugging-in-eclipse



・OCM HttpClient.executeで例外。(なんとなくこれも環境っぽいが)
  ⇒


・RawcapでTCPしかキャプチャできない
  ⇒もしかしてFirewall?
・家のWiresharkは Ver3.0.0


org.apache.http.conn.ssl.SSLSocketFactory



=======================================================================================
3/22 ～   ★は課題、調査すること


■ダメ元で試してみること (3/25)
1.OpenSSL.exeを入れ替えてみる
2.JSSEに変えてみる　（import javax.net.ssl とかって出来る?）


■Apache HttpClientがTLSv1.2をサポートしたバージョンの裏取り⇒不要
  ⇒もう、HttpClientは諦める?
　　⇒ SunJSSEとはHttpクライアントのクラスは無いので、HttpClientを使うしかない。
　⇒ていうか、HttpClient自体はTLS云々は関係ないと思う。（ソースGREPしても出てこないのが証拠）



■Java7でTLSv1.2は使えるのは間違いなさそう
  https://www.oracle.com/technetwork/java/javase/7u131-relnotes-3338543.html
  ただし、JRE 1.7.0_131-b12
   ⇒★対応しているか確認 (3/25)
  javax.net.ssl  ⇒JSSEのパッケージ

　https://blogs.oracle.com/java-platform-group/diagnosing-tls,-ssl,-and-https
　http://shanon-tech.blogspot.com/2017/12/tls10tls11javashanonadventcalendar20171.html
　⇒ここに重要なヒントが！
　　Javaのバージョンが7で、apacheのHTTPクライアントライブラリを使っているものはstack overflowの記事を参考にしたりして、カスタムのSocketFactoryを追加して対応しました。
　　　https://stackoverflow.com/questions/32587141/how-to-force-commons-httpclient-3-1-to-use-tls-1-2-only-for-https
　　　⇒★

■2008年8月にRFC 5246としてTLS 1.2が制定された。


■JSSEについて  Java Secure Socket Extension
　⇒SSLクライアントおよびサーバが使用するSSLプロトコルを扱うための標準API
　⇒パッケージ
　[1] javax.net.ssl
　　　　=> JSSE APIのコアクラスとインターフェイスセットが含まれる
　[2] javax.security.cert
　　　　=> 基本的な証明書の管理機能をサポート
　https://docs.oracle.com/javase/jp/7/technotes/guides/security/jsse/JSSERefGuide.html
　https://docs.oracle.com/javase/jp/7/technotes/guides/security/jsse/JSSERefGuide.html#SunJSSE
　https://docs.oracle.com/javase/jp/7/technotes/guides/security/SunProviders.html#SunJSSEProvider
　https://docs.oracle.com/javase/jp/7/technotes/guides/security/jsse/JSSERefGuide.html#SSLContext
　https://www.ibm.com/developerworks/jp/java/library/j-customssl/

　JDK 1.4以降のリリースには、SunJSSEというJSSE暗号化サービス・プロバイダ(略称はプロバイダ)が標準で付属しています。
　　⇒SunJSSEでは、SSLContextというEngineクラスで TLSv1.2をサポートしているみたい。
　　　⇒でもクライアントのデフォルトはTLS1。https://docs.oracle.com/javase/jp/7/technotes/guides/security/SunProviders.html#SunJSSEProvider


■結論（途中）
・SunJSEE + Apache HttpClient で、TLS通信を実現する。
・HttpClientは、TLS云々は設定できないので、キモはSunJSSEだと思う。
・さらにキモなのは、SunJSSEのSSLContextクラスだと思う。



■基本　　https://qiita.com/nowokay/items/c1de127354cd1b0ddc5e
Java = エコシステム
Java SE = 仕様
OpenJDK = Java SEの実装
Oracle JDK = オラクルがビルドしたOpenJDK + インストーラ


■Sunは、2010年1月27日にオラクルにより吸収合併


■SunJSSE で、TLSv1.2を有効にする? ★
https://superuser.com/questions/747377/enable-tls-1-1-and-1-2-for-clients-on-java-7


http://kkv.hatenablog.com/entry/2014/10/30/000117
http://kkv.hatenablog.com/entry/2014/10/31/095307
http://kkv.hatenablog.com/entry/2014/11/01/170003


https://stackoverflow.com/questions/28391798/how-to-set-tls-version-on-apache-httpclient
http://archive.apache.org/dist/httpcomponents/httpclient/source/


